import 'dart:async';

import 'package:flutter_toolkit/http/APIClient.dart';
import '../client/AuthService.dart';
import '../flavours/BuildConfig.dart';

{{~ for cat in api.categories ~}}
import 'clients/{{ cat }}Client.dart';
{{~ end ~}}

import '{{ project.dart.response_class }}.dart';
import '{{ project.dart.class_name }}Impl.dart';

class {{ project.dart.class_name }} {
  static final {{ project.dart.class_name }} _instance = {{ project.dart.class_name }}Impl(AuthService(), APIClient(baseUrl: BuildConfig().baseUrl), BuildConfig());

  factory {{ project.dart.class_name }}() {
    return _instance;
  }

{{~ for cat in api.categories ~}}
  /// A collection of API methods related to {{ cat }}
  {{ cat }}Client {{ cat | to_camel_case }}() {
    throw UnimplementedError();
  }
{{~ end ~}}

  Future<{{ project.dart.response_class }}<dynamic>> get(String path,
      [Map<String, dynamic>? params, Map<String, String>? headers]) async {
    throw UnimplementedError();
  }

  Future<{{ project.dart.response_class }}<dynamic>> delete(String path,
      [Map<String, dynamic>? params, Map<String, String>? headers]) async {
    throw UnimplementedError();
  }

  Future<{{ project.dart.response_class }}<dynamic>> put(String path,
      [Map<String, dynamic>? params, Map<String, String>? headers]) async {
    throw UnimplementedError();
  }

  Future<{{ project.dart.response_class }}<dynamic>> post(String path,
      [Map<String, dynamic>? params,
      Map<String, String>? headers,
      bool ignoreAuth = false]) async {
    throw UnimplementedError();
  }

  Future<{{ project.dart.response_class }}<dynamic>> postFiles(String path, List<String> filePaths,
      [Map<String, String>? headers]) async {
    throw UnimplementedError();
  }
}
